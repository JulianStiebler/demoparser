"""
Auto-generated Pandera schemas for demoparser2.
This file is automatically generated - do not edit manually.

Note: The main demoparser_schema for parse_ticks is located in props.py
"""

import pandera as pa
from pandera.typing import Series

class PlayerInfoSchema(pa.DataFrameModel):
    steamid: Series[pa.Int64] = pa.Field(description="Player Steam ID")
    name: Series[str] = pa.Field(nullable=True, description="Player name")
    team_number: Series[pa.Int32] = pa.Field(description="Team number")

    class Config:
        strict = True
        coerce = True

class GrenadeSchema(pa.DataFrameModel):
    grenade_type: Series[str] = pa.Field(nullable=True, description="Y coordinate")
    grenade_entity_id: Series[pa.Int32] = pa.Field(description="Y coordinate")
    x: Series[pa.Float32] = pa.Field(description="X coordinate")
    y: Series[pa.Float32] = pa.Field(description="Y coordinate")
    z: Series[pa.Float32] = pa.Field(description="Z coordinate")
    tick: Series[pa.Int32] = pa.Field(description="Game tick when event occurred")
    steamid: Series[pa.Int64] = pa.Field(description="Player Steam ID")
    name: Series[str] = pa.Field(nullable=True, description="Player name")

    class Config:
        strict = True
        coerce = True

class SkinSchema(pa.DataFrameModel):
    def_index: Series[pa.Int32] = pa.Field(description="X coordinate")
    item_id: Series[pa.Int64] = pa.Field(description="Item name")
    paint_index: Series[pa.Int32] = pa.Field(description="Paint/skin index")
    paint_seed: Series[pa.Int32] = pa.Field(description="Paint seed for pattern")
    paint_wear: Series[pa.Int32] = pa.Field(description="Wear value of the skin")
    custom_name: Series[str] = pa.Field(nullable=True, description="Custom name tag")
    steamid: Series[pa.Int64] = pa.Field(description="Player Steam ID")

    class Config:
        strict = True
        coerce = True

class EventPlayerBlindSchema(pa.DataFrameModel):
    attacker_name: Series[str] = pa.Field(nullable=True, description="Attacker name")
    attacker_steamid: Series[str] = pa.Field(nullable=True, description="Attacker Steam ID")
    blind_duration: Series[pa.Float32] = pa.Field(description="Blind Duration")
    entityid: Series[pa.Int32] = pa.Field(description="Y coordinate")
    tick: Series[pa.Int32] = pa.Field(description="Game tick when event occurred")
    user_name: Series[str] = pa.Field(nullable=True, description="Player name")
    user_steamid: Series[str] = pa.Field(nullable=True, description="Player Steam ID")

    class Config:
        strict = True
        coerce = True

class EventBombBeginplantSchema(pa.DataFrameModel):
    site: Series[pa.Int32] = pa.Field(description="Site")
    tick: Series[pa.Int32] = pa.Field(description="Game tick when event occurred")
    user_name: Series[str] = pa.Field(nullable=True, description="Player name")
    user_steamid: Series[str] = pa.Field(nullable=True, description="Player Steam ID")

    class Config:
        strict = True
        coerce = True

class EventRoundTimeWarningSchema(pa.DataFrameModel):
    tick: Series[pa.Int32] = pa.Field(description="Game tick when event occurred")

    class Config:
        strict = True
        coerce = True

class EventHegrenadeDetonateSchema(pa.DataFrameModel):
    entityid: Series[pa.Int32] = pa.Field(description="Y coordinate")
    tick: Series[pa.Int32] = pa.Field(description="Game tick when event occurred")
    user_name: Series[str] = pa.Field(nullable=True, description="Player name")
    user_steamid: Series[str] = pa.Field(nullable=True, description="Player Steam ID")
    x: Series[pa.Float32] = pa.Field(description="X coordinate")
    y: Series[pa.Float32] = pa.Field(description="Y coordinate")
    z: Series[pa.Float32] = pa.Field(description="Z coordinate")

    class Config:
        strict = True
        coerce = True

class EventRoundAnnounceLastRoundHalfSchema(pa.DataFrameModel):
    tick: Series[pa.Int32] = pa.Field(description="Game tick when event occurred")

    class Config:
        strict = True
        coerce = True

class EventCsRoundStartBeepSchema(pa.DataFrameModel):
    tick: Series[pa.Int32] = pa.Field(description="Game tick when event occurred")

    class Config:
        strict = True
        coerce = True

class EventPlayerJumpSchema(pa.DataFrameModel):
    tick: Series[pa.Int32] = pa.Field(description="Game tick when event occurred")
    user_name: Series[str] = pa.Field(nullable=True, description="Player name")
    user_steamid: Series[str] = pa.Field(nullable=True, description="Player Steam ID")

    class Config:
        strict = True
        coerce = True

class EventPlayerTeamSchema(pa.DataFrameModel):
    disconnect: Series[bool] = pa.Field(description="Disconnect")
    isbot: Series[bool] = pa.Field(description="Isbot")
    oldteam: Series[pa.Int32] = pa.Field(description="Oldteam")
    silent: Series[bool] = pa.Field(description="Silent")
    team: Series[pa.Int32] = pa.Field(description="Team")
    tick: Series[pa.Int32] = pa.Field(description="Game tick when event occurred")
    user_name: Series[str] = pa.Field(nullable=True, description="Player name")
    user_steamid: Series[str] = pa.Field(nullable=True, description="Player Steam ID")

    class Config:
        strict = True
        coerce = True

class EventServerCvarSchema(pa.DataFrameModel):
    name: Series[str] = pa.Field(nullable=True, description="Player name")
    tick: Series[pa.Int32] = pa.Field(description="Game tick when event occurred")
    value: Series[str] = pa.Field(nullable=True, description="Value")

    class Config:
        strict = True
        coerce = True

class EventRoundFreezeEndSchema(pa.DataFrameModel):
    tick: Series[pa.Int32] = pa.Field(description="Game tick when event occurred")

    class Config:
        strict = True
        coerce = True

class EventRoundAnnounceWarmupSchema(pa.DataFrameModel):
    tick: Series[pa.Int32] = pa.Field(description="Game tick when event occurred")

    class Config:
        strict = True
        coerce = True

class EventHltvChaseSchema(pa.DataFrameModel):
    distance: Series[pa.Int32] = pa.Field(description="Distance")
    inertia: Series[pa.Int32] = pa.Field(description="Inertia")
    ineye: Series[pa.Int32] = pa.Field(description="Y coordinate")
    phi: Series[pa.Int32] = pa.Field(description="Phi")
    target1: Series[pa.Int32] = pa.Field(description="Target1")
    target2: Series[pa.Int32] = pa.Field(description="Target2")
    theta: Series[pa.Int32] = pa.Field(description="Theta")
    tick: Series[pa.Int32] = pa.Field(description="Game tick when event occurred")

    class Config:
        strict = True
        coerce = True

class EventRoundOfficiallyEndedSchema(pa.DataFrameModel):
    tick: Series[pa.Int32] = pa.Field(description="Game tick when event occurred")

    class Config:
        strict = True
        coerce = True

class EventAnnouncePhaseEndSchema(pa.DataFrameModel):
    tick: Series[pa.Int32] = pa.Field(description="Game tick when event occurred")

    class Config:
        strict = True
        coerce = True

class EventBombDroppedSchema(pa.DataFrameModel):
    entindex: Series[pa.Int32] = pa.Field(description="X coordinate")
    tick: Series[pa.Int32] = pa.Field(description="Game tick when event occurred")
    user_name: Series[str] = pa.Field(nullable=True, description="Player name")
    user_steamid: Series[str] = pa.Field(nullable=True, description="Player Steam ID")

    class Config:
        strict = True
        coerce = True

class EventPlayerHurtSchema(pa.DataFrameModel):
    armor: Series[pa.Int32] = pa.Field(description="Player armor")
    attacker_name: Series[str] = pa.Field(nullable=True, description="Attacker name")
    attacker_steamid: Series[str] = pa.Field(nullable=True, description="Attacker Steam ID")
    dmg_armor: Series[pa.Int32] = pa.Field(description="Player armor")
    dmg_health: Series[pa.Int32] = pa.Field(description="Player health")
    health: Series[pa.Int32] = pa.Field(description="Player health")
    hitgroup: Series[str] = pa.Field(nullable=True, description="Hitgroup")
    tick: Series[pa.Int32] = pa.Field(description="Game tick when event occurred")
    user_name: Series[str] = pa.Field(nullable=True, description="Player name")
    user_steamid: Series[str] = pa.Field(nullable=True, description="Player Steam ID")
    weapon: Series[str] = pa.Field(nullable=True, description="Weapon name")

    class Config:
        strict = True
        coerce = True

class EventPlayerDeathSchema(pa.DataFrameModel):
    assistedflash: Series[bool] = pa.Field(description="Assistedflash")
    assister_name: Series[str] = pa.Field(nullable=True, description="Player name")
    assister_steamid: Series[str] = pa.Field(nullable=True, description="Player Steam ID")
    attacker_name: Series[str] = pa.Field(nullable=True, description="Attacker name")
    attacker_steamid: Series[str] = pa.Field(nullable=True, description="Attacker Steam ID")
    attackerblind: Series[bool] = pa.Field(description="Attackerblind")
    attackerinair: Series[bool] = pa.Field(description="Attackerinair")
    distance: Series[pa.Float32] = pa.Field(description="Distance")
    dmg_armor: Series[pa.Int32] = pa.Field(description="Player armor")
    dmg_health: Series[pa.Int32] = pa.Field(description="Player health")
    dominated: Series[pa.Int32] = pa.Field(description="Dominated")
    headshot: Series[bool] = pa.Field(description="Whether it was a headshot")
    hitgroup: Series[str] = pa.Field(nullable=True, description="Hitgroup")
    noreplay: Series[bool] = pa.Field(description="Y coordinate")
    noscope: Series[bool] = pa.Field(description="Noscope")
    penetrated: Series[pa.Int32] = pa.Field(description="Penetrated")
    revenge: Series[pa.Int32] = pa.Field(description="Revenge")
    thrusmoke: Series[bool] = pa.Field(description="Thrusmoke")
    tick: Series[pa.Int32] = pa.Field(description="Game tick when event occurred")
    user_name: Series[str] = pa.Field(nullable=True, description="Player name")
    user_steamid: Series[str] = pa.Field(nullable=True, description="Player Steam ID")
    weapon: Series[str] = pa.Field(nullable=True, description="Weapon name")
    weapon_fauxitemid: Series[str] = pa.Field(nullable=True, description="X coordinate")
    weapon_itemid: Series[str] = pa.Field(nullable=True, description="Weapon name")
    weapon_originalowner_xuid: Series[str] = pa.Field(nullable=True, description="X coordinate")
    wipe: Series[pa.Int32] = pa.Field(description="Wipe")

    class Config:
        strict = True
        coerce = True

class EventInfernoStartburnSchema(pa.DataFrameModel):
    entityid: Series[pa.Int32] = pa.Field(description="Y coordinate")
    tick: Series[pa.Int32] = pa.Field(description="Game tick when event occurred")
    user_name: Series[str] = pa.Field(nullable=True, description="Player name")
    user_steamid: Series[str] = pa.Field(nullable=True, description="Player Steam ID")
    x: Series[pa.Float32] = pa.Field(description="X coordinate")
    y: Series[pa.Float32] = pa.Field(description="Y coordinate")
    z: Series[pa.Float32] = pa.Field(description="Z coordinate")

    class Config:
        strict = True
        coerce = True

class EventBombPlantedSchema(pa.DataFrameModel):
    site: Series[pa.Int32] = pa.Field(description="Site")
    tick: Series[pa.Int32] = pa.Field(description="Game tick when event occurred")
    user_name: Series[str] = pa.Field(nullable=True, description="Player name")
    user_steamid: Series[str] = pa.Field(nullable=True, description="Player Steam ID")

    class Config:
        strict = True
        coerce = True

class EventItemPickupSchema(pa.DataFrameModel):
    defindex: Series[pa.Int32] = pa.Field(description="Item definition index")
    item: Series[str] = pa.Field(nullable=True, description="Item name")
    silent: Series[bool] = pa.Field(description="Silent")
    tick: Series[pa.Int32] = pa.Field(description="Game tick when event occurred")
    user_name: Series[str] = pa.Field(nullable=True, description="Player name")
    user_steamid: Series[str] = pa.Field(nullable=True, description="Player Steam ID")

    class Config:
        strict = True
        coerce = True

class EventRoundAnnounceMatchStartSchema(pa.DataFrameModel):
    tick: Series[pa.Int32] = pa.Field(description="Game tick when event occurred")

    class Config:
        strict = True
        coerce = True

class EventServerMessageSchema(pa.DataFrameModel):
    server_message: Series[str] = pa.Field(nullable=True, description="Server Message")
    tick: Series[pa.Int32] = pa.Field(description="Game tick when event occurred")

    class Config:
        strict = True
        coerce = True

class EventDecoyDetonateSchema(pa.DataFrameModel):
    entityid: Series[pa.Int32] = pa.Field(description="Y coordinate")
    tick: Series[pa.Int32] = pa.Field(description="Game tick when event occurred")
    user_name: Series[str] = pa.Field(nullable=True, description="Player name")
    user_steamid: Series[str] = pa.Field(nullable=True, description="Player Steam ID")
    x: Series[pa.Float32] = pa.Field(description="X coordinate")
    y: Series[pa.Float32] = pa.Field(description="Y coordinate")
    z: Series[pa.Float32] = pa.Field(description="Z coordinate")

    class Config:
        strict = True
        coerce = True

class EventHltvFixedSchema(pa.DataFrameModel):
    fov: Series[pa.Float32] = pa.Field(description="Fov")
    offset: Series[pa.Int32] = pa.Field(description="Offset")
    phi: Series[pa.Int32] = pa.Field(description="Phi")
    posx: Series[pa.Int32] = pa.Field(description="X coordinate")
    posy: Series[pa.Int32] = pa.Field(description="Y coordinate")
    posz: Series[pa.Int32] = pa.Field(description="Z coordinate")
    target: Series[pa.Int32] = pa.Field(description="Target")
    theta: Series[pa.Int32] = pa.Field(description="Theta")
    tick: Series[pa.Int32] = pa.Field(description="Game tick when event occurred")

    class Config:
        strict = True
        coerce = True

class EventPlayerFootstepSchema(pa.DataFrameModel):
    tick: Series[pa.Int32] = pa.Field(description="Game tick when event occurred")
    user_name: Series[str] = pa.Field(nullable=True, description="Player name")
    user_steamid: Series[str] = pa.Field(nullable=True, description="Player Steam ID")

    class Config:
        strict = True
        coerce = True

class EventDecoyStartedSchema(pa.DataFrameModel):
    entityid: Series[pa.Int32] = pa.Field(description="Y coordinate")
    tick: Series[pa.Int32] = pa.Field(description="Game tick when event occurred")
    user_name: Series[str] = pa.Field(nullable=True, description="Player name")
    user_steamid: Series[str] = pa.Field(nullable=True, description="Player Steam ID")
    x: Series[pa.Float32] = pa.Field(description="X coordinate")
    y: Series[pa.Float32] = pa.Field(description="Y coordinate")
    z: Series[pa.Float32] = pa.Field(description="Z coordinate")

    class Config:
        strict = True
        coerce = True

class EventWeaponFireSchema(pa.DataFrameModel):
    silenced: Series[bool] = pa.Field(description="Silenced")
    tick: Series[pa.Int32] = pa.Field(description="Game tick when event occurred")
    user_name: Series[str] = pa.Field(nullable=True, description="Player name")
    user_steamid: Series[str] = pa.Field(nullable=True, description="Player Steam ID")
    weapon: Series[str] = pa.Field(nullable=True, description="Weapon name")

    class Config:
        strict = True
        coerce = True

class EventOtherDeathSchema(pa.DataFrameModel):
    attacker_name: Series[str] = pa.Field(nullable=True, description="Attacker name")
    attacker_steamid: Series[str] = pa.Field(nullable=True, description="Attacker Steam ID")
    attackerblind: Series[bool] = pa.Field(description="Attackerblind")
    headshot: Series[bool] = pa.Field(description="Whether it was a headshot")
    noscope: Series[bool] = pa.Field(description="Noscope")
    otherid: Series[pa.Int32] = pa.Field(description="Otherid")
    othertype: Series[str] = pa.Field(nullable=True, description="Y coordinate")
    penetrated: Series[pa.Int32] = pa.Field(description="Penetrated")
    thrusmoke: Series[bool] = pa.Field(description="Thrusmoke")
    tick: Series[pa.Int32] = pa.Field(description="Game tick when event occurred")
    weapon: Series[str] = pa.Field(nullable=True, description="Weapon name")
    weapon_fauxitemid: Series[str] = pa.Field(nullable=True, description="X coordinate")
    weapon_itemid: Series[str] = pa.Field(nullable=True, description="Weapon name")
    weapon_originalowner_xuid: Series[str] = pa.Field(nullable=True, description="X coordinate")

    class Config:
        strict = True
        coerce = True

class EventCsPreRestartSchema(pa.DataFrameModel):
    tick: Series[pa.Int32] = pa.Field(description="Game tick when event occurred")

    class Config:
        strict = True
        coerce = True

class EventBombPickupSchema(pa.DataFrameModel):
    tick: Series[pa.Int32] = pa.Field(description="Game tick when event occurred")
    user_name: Series[str] = pa.Field(nullable=True, description="Player name")
    user_steamid: Series[str] = pa.Field(nullable=True, description="Player Steam ID")

    class Config:
        strict = True
        coerce = True

class EventInfernoExpireSchema(pa.DataFrameModel):
    entityid: Series[pa.Int32] = pa.Field(description="Y coordinate")
    tick: Series[pa.Int32] = pa.Field(description="Game tick when event occurred")
    user_name: Series[str] = pa.Field(nullable=True, description="Player name")
    user_steamid: Series[str] = pa.Field(nullable=True, description="Player Steam ID")
    x: Series[pa.Float32] = pa.Field(description="X coordinate")
    y: Series[pa.Float32] = pa.Field(description="Y coordinate")
    z: Series[pa.Float32] = pa.Field(description="Z coordinate")

    class Config:
        strict = True
        coerce = True

class EventBombExplodedSchema(pa.DataFrameModel):
    site: Series[pa.Int32] = pa.Field(description="Site")
    tick: Series[pa.Int32] = pa.Field(description="Game tick when event occurred")
    user_name: Series[str] = pa.Field(nullable=True, description="Player name")
    user_steamid: Series[str] = pa.Field(nullable=True, description="Player Steam ID")

    class Config:
        strict = True
        coerce = True

class EventRoundPrestartSchema(pa.DataFrameModel):
    tick: Series[pa.Int32] = pa.Field(description="Game tick when event occurred")

    class Config:
        strict = True
        coerce = True

class EventFlashbangDetonateSchema(pa.DataFrameModel):
    entityid: Series[pa.Int32] = pa.Field(description="Y coordinate")
    tick: Series[pa.Int32] = pa.Field(description="Game tick when event occurred")
    user_name: Series[str] = pa.Field(nullable=True, description="Player name")
    user_steamid: Series[str] = pa.Field(nullable=True, description="Player Steam ID")
    x: Series[pa.Float32] = pa.Field(description="X coordinate")
    y: Series[pa.Float32] = pa.Field(description="Y coordinate")
    z: Series[pa.Float32] = pa.Field(description="Z coordinate")

    class Config:
        strict = True
        coerce = True

class EventBombBegindefuseSchema(pa.DataFrameModel):
    haskit: Series[bool] = pa.Field(description="Haskit")
    tick: Series[pa.Int32] = pa.Field(description="Game tick when event occurred")
    user_name: Series[str] = pa.Field(nullable=True, description="Player name")
    user_steamid: Series[str] = pa.Field(nullable=True, description="Player Steam ID")

    class Config:
        strict = True
        coerce = True

class EventSmokegrenadeDetonateSchema(pa.DataFrameModel):
    entityid: Series[pa.Int32] = pa.Field(description="Y coordinate")
    tick: Series[pa.Int32] = pa.Field(description="Game tick when event occurred")
    user_name: Series[str] = pa.Field(nullable=True, description="Player name")
    user_steamid: Series[str] = pa.Field(nullable=True, description="Player Steam ID")
    x: Series[pa.Float32] = pa.Field(description="X coordinate")
    y: Series[pa.Float32] = pa.Field(description="Y coordinate")
    z: Series[pa.Float32] = pa.Field(description="Z coordinate")

    class Config:
        strict = True
        coerce = True

class EventSmokegrenadeExpiredSchema(pa.DataFrameModel):
    entityid: Series[pa.Int32] = pa.Field(description="Y coordinate")
    tick: Series[pa.Int32] = pa.Field(description="Game tick when event occurred")
    user_name: Series[str] = pa.Field(nullable=True, description="Player name")
    user_steamid: Series[str] = pa.Field(nullable=True, description="Player Steam ID")
    x: Series[pa.Float32] = pa.Field(description="X coordinate")
    y: Series[pa.Float32] = pa.Field(description="Y coordinate")
    z: Series[pa.Float32] = pa.Field(description="Z coordinate")

    class Config:
        strict = True
        coerce = True

class EventCsWinPanelMatchSchema(pa.DataFrameModel):
    tick: Series[pa.Int32] = pa.Field(description="Game tick when event occurred")

    class Config:
        strict = True
        coerce = True

class EventChatMessageSchema(pa.DataFrameModel):
    chat_message: Series[str] = pa.Field(nullable=True, description="Chat Message")
    tick: Series[pa.Int32] = pa.Field(description="Game tick when event occurred")
    user_name: Series[str] = pa.Field(nullable=True, description="Player name")
    user_steamid: Series[str] = pa.Field(nullable=True, description="Player Steam ID")

    class Config:
        strict = True
        coerce = True

class EventCsRoundFinalBeepSchema(pa.DataFrameModel):
    tick: Series[pa.Int32] = pa.Field(description="Game tick when event occurred")

    class Config:
        strict = True
        coerce = True

class EventPlayerSpawnSchema(pa.DataFrameModel):
    tick: Series[pa.Int32] = pa.Field(description="Game tick when event occurred")
    user_name: Series[str] = pa.Field(nullable=True, description="Player name")
    user_steamid: Series[str] = pa.Field(nullable=True, description="Player Steam ID")

    class Config:
        strict = True
        coerce = True

class EventBombDefusedSchema(pa.DataFrameModel):
    site: Series[pa.Int32] = pa.Field(description="Site")
    tick: Series[pa.Int32] = pa.Field(description="Game tick when event occurred")
    user_name: Series[str] = pa.Field(nullable=True, description="Player name")
    user_steamid: Series[str] = pa.Field(nullable=True, description="Player Steam ID")

    class Config:
        strict = True
        coerce = True

class EventPlayerDisconnectSchema(pa.DataFrameModel):
    PlayerID: Series[pa.Int32] = pa.Field(description="Y coordinate")
    name: Series[str] = pa.Field(nullable=True, description="Player name")
    networkid: Series[str] = pa.Field(nullable=True, description="Networkid")
    reason: Series[pa.Int32] = pa.Field(description="Reason")
    tick: Series[pa.Int32] = pa.Field(description="Game tick when event occurred")
    user_name: Series[str] = pa.Field(nullable=True, description="Player name")
    user_steamid: Series[str] = pa.Field(nullable=True, description="Player Steam ID")
    xuid: Series[pa.Int64] = pa.Field(description="X coordinate")

    class Config:
        strict = True
        coerce = True

class EventRoundPoststartSchema(pa.DataFrameModel):
    tick: Series[pa.Int32] = pa.Field(description="Game tick when event occurred")

    class Config:
        strict = True
        coerce = True

class EventWeaponReloadSchema(pa.DataFrameModel):
    tick: Series[pa.Int32] = pa.Field(description="Game tick when event occurred")
    user_name: Series[str] = pa.Field(nullable=True, description="Player name")
    user_steamid: Series[str] = pa.Field(nullable=True, description="Player Steam ID")

    class Config:
        strict = True
        coerce = True

class EventRoundAnnounceMatchPointSchema(pa.DataFrameModel):
    tick: Series[pa.Int32] = pa.Field(description="Game tick when event occurred")

    class Config:
        strict = True
        coerce = True

class EventBeginNewMatchSchema(pa.DataFrameModel):
    tick: Series[pa.Int32] = pa.Field(description="Game tick when event occurred")

    class Config:
        strict = True
        coerce = True

class EventBuytimeEndedSchema(pa.DataFrameModel):
    tick: Series[pa.Int32] = pa.Field(description="Game tick when event occurred")

    class Config:
        strict = True
        coerce = True

class EventWeaponZoomSchema(pa.DataFrameModel):
    tick: Series[pa.Int32] = pa.Field(description="Game tick when event occurred")
    user_name: Series[str] = pa.Field(nullable=True, description="Player name")
    user_steamid: Series[str] = pa.Field(nullable=True, description="Player Steam ID")

    class Config:
        strict = True
        coerce = True

class EventItemEquipSchema(pa.DataFrameModel):
    canzoom: Series[bool] = pa.Field(description="Z coordinate")
    defindex: Series[pa.Int32] = pa.Field(description="Item definition index")
    hassilencer: Series[bool] = pa.Field(description="Hassilencer")
    hastracers: Series[bool] = pa.Field(description="Hastracers")
    ispainted: Series[bool] = pa.Field(description="Ispainted")
    issilenced: Series[bool] = pa.Field(description="Issilenced")
    item: Series[str] = pa.Field(nullable=True, description="Item name")
    tick: Series[pa.Int32] = pa.Field(description="Game tick when event occurred")
    user_name: Series[str] = pa.Field(nullable=True, description="Player name")
    user_steamid: Series[str] = pa.Field(nullable=True, description="Player Steam ID")
    weptype: Series[pa.Int32] = pa.Field(description="Y coordinate")

    class Config:
        strict = True
        coerce = True

